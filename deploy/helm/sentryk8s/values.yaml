# sentryk8s
global:
  postgresHost: sentryk8s-postgresql
  rabbitmqHost: sentryk8s-rabbitmq
  namespace: sentryk8s

scheduler:
  image:
    repository: brennokm/scheduler
    tag: main-latest
    pullPolicy: Always
  replicaCount: 2
  service:
    port: 8000
  resources:
    enabled: true
    requests:
      cpu: 150m
      memory: 256Mi
    limits:
      cpu: 300m
      memory: 512Mi
  hpa:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
    behavior:
      scaleUp:
        stabilizationWindowSeconds: 300    # espera 5 min para aumentar mais (suaviza picos)
        policies:
        - type: Percent
          value: 50                        # pode aumentar no máximo 50% da quantidade atual de pods
          periodSeconds: 60                # a cada 1 minuto
        - type: Pods
          value: 2                         # ou no máximo 2 pods de aumento em 1 min
          periodSeconds: 60
      scaleDown:
        stabilizationWindowSeconds: 300    # espera 5 min para reduzir mais
        policies:
        - type: Percent
          value: 20                        # pode reduzir no máximo 20% da quantidade atual de pods
          periodSeconds: 60
        - type: Pods
          value: 1                         # ou no máximo 1 pod de redução em 1 min
          periodSeconds: 60

worker:
  image:
    repository: brennokm/worker
    tag: main-latest
    pullPolicy: Always
  replicaCount: 3
  service:
    port: 8001
  resources:
    enabled: true
    requests:
      cpu: 500m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 512Mi
  hpa:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetCPUEnabled: false
    targetMemoryUtilizationPercentage: 120
    targetMemoryEnabled: false
    customMetricsEnabled: true
    objectMetrics:
      - describedObject:
          apiVersion: v1
          kind: Namespace
          name: "sentryk8s-dev"
        metric:
          name: "rabbitmq_queue_messages_ready"
          selector:
            matchLabels:
              queue: "tasks"
              vhost: "root"
        target:
          type: Value
          value: "200"
    behavior:
      scaleUp:
        stabilizationWindowSeconds: 60
        policies:
        - type: Percent
          value: 50
          periodSeconds: 60
        - type: Pods
          value: 3
          periodSeconds: 60
      scaleDown:
        stabilizationWindowSeconds: 60
        policies:
        - type: Percent
          value: 20
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60

rabbitmq:
  auth:
    username: admin
    existingSecret: rabbitmq-secrets
    existingUsernameKey: rabbitmq-username
    existingPasswordKey: rabbitmq-password
    existingErlangCookieKey: rabbitmq-erlang-cookie
  extraEnvVars:
  - name: RABBITMQ_USERNAME
    valueFrom:
      secretKeyRef:
        name: rabbitmq-secrets
        key: rabbitmq-username
  - name: RABBITMQ_PASSWORD
    valueFrom:
      secretKeyRef:
        name: rabbitmq-secrets
        key: rabbitmq-password
  plugins: "rabbitmq_management rabbitmq_peer_discovery_k8s rabbitmq_prometheus"
  configuration: |-
    default_user = admin
    default_pass = ${RABBITMQ_PASSWORD}
    loopback_users.admin = false
    default_permissions.configure = .*
    default_permissions.read = .*
    default_permissions.write = .*
    prometheus.tcp.port = 9419
    prometheus.return_per_object_metrics = true
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: monitoring
      labels:
        release: prometheus-stack
      interval: 5s
    rabbitmq:
      url: http://sentryk8s-dev-rabbitmq.sentryk8s-dev.svc.cluster.local:15672
      user: admin
      password: "$(RABBITMQ_PASSWORD)"
    extraEnvVars:
      - name: RABBITMQ_USER
        value: admin
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: rabbitmq-secrets
            key: rabbitmq-password
  persistence:
    enabled: true
    size: 10Gi
  livenessProbe:
    enabled: false # temporariamente desativado
    initialDelaySeconds: 120
    command:
      - sh
      - -ec
      - 'curl -f --user admin:${RABBITMQ_PASSWORD} 127.0.0.1:15672/api/health/checks/virtual-hosts'
  readinessProbe:
    enabled: false # temporariamente desativado
    initialDelaySeconds: 30
    command:
      - sh
      - -ec
      - 'curl -f --user admin:${RABBITMQ_PASSWORD} 127.0.0.1:15672/api/health/checks/local-alarms'

postgresql:
  auth:
    enablePostgresUser: false
    existingSecret: postgres-secrets
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password
      usernameKey: username
    username: "admin"
    password: ""  # Desabilita a senha padrão
    database: "sentry_db"
  primary:
    initdb:
      scriptsConfigMap: sentryk8s-initdb
    persistence:
      enabled: true
      size: 10Gi
    resources:
      requests:
        cpu: 500m
        memory: 1Gi