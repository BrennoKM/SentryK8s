# sentryk8s
scheduler:
  image:
    repository: brennokm/scheduler
    tag: latest
  replicaCount: 2
  service:
    port: 8000
  env:
    - name: RABBITMQ_HOST
      value: "sentryk8s-rabbitmq"
    - name: POSTGRES_HOST
      value: "sentryk8s-postgresql"

worker:
  image:
    repository: brennokm/worker
    tag: latest
  replicaCount: 3
  service:
    port: 8001
  env:
    - name: RABBITMQ_HOST
      value: "sentryk8s-rabbitmq"
    - name: POSTGRES_HOST
      value: "sentryk8s-postgresql"

rabbitmq:
  auth:
    existingSecret: rabbitmq-secrets
    existingSecretUsernameKey: rabbitmq-username
    existingSecretPasswordKey: rabbitmq-password
    existingSecretErlangKey: rabbitmq-erlang-cookie
    forcePassword: true
  configuration: |-
    default_user = ${RABBITMQ_USERNAME}
    default_pass = ${RABBITMQ_PASSWORD}
    loopback_users.${RABBITMQ_USERNAME} = true
    default_permissions.configure = .*
    default_permissions.read = .*
    default_permissions.write = .*
  persistence:
    enabled: true
    size: 10Gi
  livenessProbe:
    enabled: true
    initialDelaySeconds: 120
    command:
      - sh
      - -ec
      - 'curl -f --user ${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD} 127.0.0.1:15672/api/health/checks/virtual-hosts'
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    command:
      - sh
      - -ec
      - 'curl -f --user ${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD} 127.0.0.1:15672/api/health/checks/local-alarms'

postgresql:
  auth:
    existingSecret: postgres-secrets
    secretKeys:
      postgres-password-key: password
      username-key: username
  primary:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      requests:
        cpu: 500m
        memory: 1Gi