apiVersion: v1
kind: Secret
metadata:
  name: prometheus-community-helm-repo
  namespace: argocd
  labels:
    argocd.argoproj.io/secret-type: repository
stringData:
  type: helm
  name: prometheus-community
  url: https://prometheus-community.github.io/helm-charts

---

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-minimal
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 58.2.0
    chart: kube-prometheus-stack
    helm:
      values: |
        installCRDs: true
        
        prometheus:
          enabled: true
          persistence:
            enabled:
          
          prometheusSpec:
            additionalScrapeConfigs:
              - job_name: 'rabbitmq-direct-scrape'
                static_configs:
                  - targets: ['sentryk8s-dev-rabbitmq.sentryk8s-dev.svc.cluster.local:9419']
        prometheus-adapter:
          enabled: true
          rules:
            custom:
            - seriesQuery: 'rabbitmq_queue_messages_ready{queue!=""}'
              resources:
                overrides:
                  namespace: {resource: "namespace"}
              name:
                matches: "rabbitmq_queue_messages_ready"
                as: "rabbitmq_queue_messages_ready"
              metricsQuery: |-
                label_replace(
                  rabbitmq_queue_messages_ready{queue="{{.Series.Labels.queue}}", vhost="{{.Series.Labels.vhost}}"},
                  "vhost", "root", "vhost", "/"
                )
          
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true